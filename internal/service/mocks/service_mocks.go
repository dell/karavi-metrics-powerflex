// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/dell/karavi-metrics-powerflex/internal/service (interfaces: Service)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	service "github.com/dell/karavi-metrics-powerflex/internal/service"
	gomock "github.com/golang/mock/gomock"
	v1 "k8s.io/api/core/v1"
	reflect "reflect"
)

// MockService is a mock of Service interface
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// ExportVolumeStatistics mocks base method
func (m *MockService) ExportVolumeStatistics(arg0 context.Context, arg1 []service.VolumeStatisticsGetter, arg2 service.VolumeFinder) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ExportVolumeStatistics", arg0, arg1, arg2)
}

// ExportVolumeStatistics indicates an expected call of ExportVolumeStatistics
func (mr *MockServiceMockRecorder) ExportVolumeStatistics(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExportVolumeStatistics", reflect.TypeOf((*MockService)(nil).ExportVolumeStatistics), arg0, arg1, arg2)
}

// GetSDCStatistics mocks base method
func (m *MockService) GetSDCStatistics(arg0 context.Context, arg1 []v1.Node, arg2 []service.StatisticsGetter) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetSDCStatistics", arg0, arg1, arg2)
}

// GetSDCStatistics indicates an expected call of GetSDCStatistics
func (mr *MockServiceMockRecorder) GetSDCStatistics(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSDCStatistics", reflect.TypeOf((*MockService)(nil).GetSDCStatistics), arg0, arg1, arg2)
}

// GetSDCs mocks base method
func (m *MockService) GetSDCs(arg0 context.Context, arg1 service.PowerFlexClient, arg2 service.SDCFinder) ([]service.StatisticsGetter, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSDCs", arg0, arg1, arg2)
	ret0, _ := ret[0].([]service.StatisticsGetter)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSDCs indicates an expected call of GetSDCs
func (mr *MockServiceMockRecorder) GetSDCs(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSDCs", reflect.TypeOf((*MockService)(nil).GetSDCs), arg0, arg1, arg2)
}

// GetStorageClasses mocks base method
func (m *MockService) GetStorageClasses(arg0 context.Context, arg1 service.PowerFlexClient, arg2 service.StorageClassFinder) ([]service.StorageClassMeta, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStorageClasses", arg0, arg1, arg2)
	ret0, _ := ret[0].([]service.StorageClassMeta)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStorageClasses indicates an expected call of GetStorageClasses
func (mr *MockServiceMockRecorder) GetStorageClasses(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStorageClasses", reflect.TypeOf((*MockService)(nil).GetStorageClasses), arg0, arg1, arg2)
}

// GetStoragePoolStatistics mocks base method
func (m *MockService) GetStoragePoolStatistics(arg0 context.Context, arg1 []service.StorageClassMeta) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetStoragePoolStatistics", arg0, arg1)
}

// GetStoragePoolStatistics indicates an expected call of GetStoragePoolStatistics
func (mr *MockServiceMockRecorder) GetStoragePoolStatistics(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStoragePoolStatistics", reflect.TypeOf((*MockService)(nil).GetStoragePoolStatistics), arg0, arg1)
}

// GetVolumes mocks base method
func (m *MockService) GetVolumes(arg0 context.Context, arg1 []service.StatisticsGetter) ([]service.VolumeStatisticsGetter, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVolumes", arg0, arg1)
	ret0, _ := ret[0].([]service.VolumeStatisticsGetter)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetVolumes indicates an expected call of GetVolumes
func (mr *MockServiceMockRecorder) GetVolumes(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVolumes", reflect.TypeOf((*MockService)(nil).GetVolumes), arg0, arg1)
}
