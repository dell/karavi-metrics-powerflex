// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/dell/karavi-metrics-powerflex/internal/service (interfaces: NodeFinder)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	v1 "k8s.io/api/core/v1"
	reflect "reflect"
)

// MockNodeFinder is a mock of NodeFinder interface
type MockNodeFinder struct {
	ctrl     *gomock.Controller
	recorder *MockNodeFinderMockRecorder
}

// MockNodeFinderMockRecorder is the mock recorder for MockNodeFinder
type MockNodeFinderMockRecorder struct {
	mock *MockNodeFinder
}

// NewMockNodeFinder creates a new mock instance
func NewMockNodeFinder(ctrl *gomock.Controller) *MockNodeFinder {
	mock := &MockNodeFinder{ctrl: ctrl}
	mock.recorder = &MockNodeFinderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockNodeFinder) EXPECT() *MockNodeFinderMockRecorder {
	return m.recorder
}

// GetNodes mocks base method
func (m *MockNodeFinder) GetNodes() ([]v1.Node, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNodes")
	ret0, _ := ret[0].([]v1.Node)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNodes indicates an expected call of GetNodes
func (mr *MockNodeFinderMockRecorder) GetNodes() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNodes", reflect.TypeOf((*MockNodeFinder)(nil).GetNodes))
}
